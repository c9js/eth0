/*▄────────▄
  █        █
  █  Ядро  █
  █        █
  ▀────────▀*/
require('core');       // Ядро
require('mvc');        // Работа с MVC-моделью
require('./lib/core'); // Eth0

/*▄──────────────────────▄
  █                      █
  █  Без доступа к сети  █
  █                      █
  ▀──────────────────────▀*/
$.eth0.coldNode = class {
/*┌──────────────────────────────────────────────┐
  │ Обрабатывает запрос на событие "Перевод TRX" │
  └──────────────────────────────────────────────┘*/
    'sendTRX' = (request, response) => {
        _=['Запрос от Клиента!', request]
        response.send(['Ответ #1']);
    }
};

/*▄────────────────────▄
  █                    █
  █  Подключен к сети  █
  █                    █
  ▀────────────────────▀*/
$.eth0.hotNode = class {
/*┌────────────────────────────────────────────────────────┐
  │ Обрабатывает ответ на событие "Соединение установлено" │
  └────────────────────────────────────────────────────────┘*/
    'connection' = (request, response) => {
        _='Соединение установлено!'
        response.send('sendTRX', ['Запрос #1']);
    }
    
/*┌─────────────────────────────────────────────┐
  │ Обрабатывает ответ на событие "Перевод TRX" │
  └─────────────────────────────────────────────┘*/
    'sendTRX' = (request, response) => {
        _=['Ответ от Сервера!', response]
    }
};
